
log_format nginx '\$remote_addr - \$remote_user [\$time_local] '
'"\$request" \$status \$body_bytes_sent \$request_time '
'"\$http_referer" "\$http_user_agent"';

access_log /var/log/nginx/access.log;

proxy_cache_path /var/cache/nginx/proxy_cache levels=1:2 keys_zone=wm_cache:10m max_size=1g;
proxy_cache_valid 5m;

server {
  listen 8080;
  access_log off;

  location = /status {
    stub_status;
    server_tokens on;
  }

  location = /foundry_metrics {
    proxy_pass http://foundry:30000/metrics;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}

server {
  listen 80;
  listen [::]:80;

  server_name "{{ foundry_fqdn }}";
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;

  server_name "{{ foundry_fqdn }}";

  root /usr/share/nginx/html;

  ssl_certificate "/etc/letsencrypt/live/{{ foundry_fqdn }}/fullchain.pem";
  ssl_certificate_key "/etc/letsencrypt/live/{{ foundry_fqdn }}/privkey.pem";
  ssl_trusted_certificate "/etc/letsencrypt/live/{{ foundry_fqdn }}/chain.pem";

  location /.well-known {}

  location /metrics {
    return 404;
  }

  location /api {
    return 404;
  }

  location /monitoring {
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_pass http://grafana:3000;
  }

  location / {
    proxy_pass http://foundry:30000;

    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_http_version 1.1;

    proxy_ignore_headers Cache-Control;
    proxy_hide_header Cache-Control;
    proxy_cache wm_cache;

    add_header Cache-Control "public";
    add_header X-Cache-Status $upstream_cache_status;

    expires 1d;

    if ($request_uri ~ /(game|join)) {
      expires off;
    }
  }
}

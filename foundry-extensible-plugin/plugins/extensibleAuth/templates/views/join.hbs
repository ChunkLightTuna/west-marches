<template id="notifications"></template>

<section id="setup" class="join dark flexrow">
    <header id="world-title" class="join-header app">
        <h1>{{ world.title }}</h1>
    </header>

    <section class="join-body flexrow">
        <div class="left flexcol">
            <form id="join-form" class="app" autocomplete="off">
                <h1>Join Game Session</h1>
                {{#each auths}}
                    {{> (partial @key) . }}
                {{/each}}
            </form>

            <form id="shutdown" class="app" autocomplete="off">
                <h1>Return to Setup</h1>
                <div class="form-group">
                    <label><i class="fas fa-key"></i> Admin Access Key</label>
                    <input type="password" name="adminKey" value="" autocomplete="off">
                </div>
                <button type="submit" name="submit" data-action="shutdown" disabled>
                    <i class="fas fa-lock"></i> Return to Setup
                </button>
            </form>
        </div>

        <div class="right flexcol">
            <div id="world-description" class="app">
                <h1>World Description</h1>
                {{{ world.description }}}
            </div>
        </div>
    </section>
</section>

<script type="text/javascript">
    window.addEventListener("DOMContentLoaded", async function() {
        const forms = document.querySelectorAll("form");
        for ( let form of forms ) {
            form.submit.disabled = false;
            form.addEventListener("submit", async event => {
                event.preventDefault();

                // Disable the button and collect form data
                const form = event.target;
                form.submit.disabled = true;
                const formData = new FormData(form);
                formData.set("action", form.submit.dataset.action);

                // Submit a POST request to the server
                const response = await fetch('/join', {
                    method: "POST",
                    body: formData
                }).then(r => r.json());

                // Redirect on success
                if ( response.status === "success" ) {
                    ui.notifications.info(game.i18n.localize(response.message));
                    setTimeout(() => window.location.href = response.redirect, 500 );
                }

                // Notify on failure
                else if ( response.status === "failed" ) {
                    ui.notifications.error(game.i18n.localize(response.error ?? response.message));
                    form.submit.disabled = false;
                }
            })
        }
    }, {once: true, passive: true});

</script>
